{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "description": "A list of errors",
  "type": "object",
  "required": ["version", "errors"],
  "properties": {
    "version": {
      "type": "number",
      "enum": [1]
    },
    "errors": {"$ref": "#/definitions/errors"}
  },
  "definitions": {
    "errors": {
      "type": "object",
      "patternProperties": {
        "^[1-9]\\d{2}$": {"$ref": "#/definitions/error"}
      },
      "propertyNames": {
        "type": "string",
        "pattern": "^[1-9]\\d{2}$"
      }
    },
    "error": {
      "type": "object",
      "required": ["title", "description"],
      "properties": {
        "title": {"type": "string"},
        "description": {"$ref": "#/definitions/errorDescription"},
        "arguments": {"$ref": "#/definitions/errorArguments"}
      },
      "additionalProperties": false
    },
    "errorDescription": {
      "anyOf": [
        {"type": "string"},
        {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "friendly": {"type": "string"},
            "technical": {"type": "string"}
          },
          "additionalProperties": false
        }
      ]
    },
    "errorArguments": {
      "type": "object",
      "patternProperties": {
        "^.*$": {"$ref": "#/definitions/errorArgument"}
      },
      "additionalProperties": false
    },
    "errorArgument": {
      "anyOf": [
        {"type": "null"},
        {
          "type": "object",
          "properties": {
            "description": {"type": "string"},
            "validators": {"$ref": "#/definitions/errorArgumentValidators"},
            "default": {"$ref": "#/definitions/errorArgumentDefault"}
          },
          "additionalProperties": false
        }
      ]
    },
    "errorArgumentValidators": {
      "type": "array",
      "items": {"$ref": "#/definitions/errorArgumentValidator"},
      "uniqueItems": true
    },
    "errorArgumentValidator": {
      "type": "string",
      "enum": [
        "number",
        "positive_number",
        "nonnegative_number",
        "integer"
      ]
    },
    "errorArgumentDefault": {
      "anyOf": [
        {"type": "null"},
        {"type": "string"},
        {"type": "number"},
        {"type": "boolean"}
      ]
    }
  }
}
